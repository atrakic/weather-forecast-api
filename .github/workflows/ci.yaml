name: ci
on:
  pull_request:
  workflow_dispatch:
  push:
    branches:
      - '**'
      - '!minikube**'
      - '!main'
    paths-ignore:
      - '**/README.md'

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: src
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 5.0.x
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore
      - name: Unit test
        run: dotnet test --no-build --verbosity normal

  # Build and test the image locally
  docker-compose-test:
    runs-on: ubuntu-latest
    #if: github.event_name == 'pull_request'
    needs:
      - build
    steps:
      - uses: actions/checkout@v3
      - name: Docker build and run
        run: |
          cd src
          TAG=$(git rev-parse HEAD) make
          docker ps -a --no-trunc
          sleep 1
          curl -f -sL localhost/WeatherForecast

  # Build latest
  build-latest:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
    needs:
      - docker-compose-test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to ${{ env.REGISTRY }} container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          # https://docs.github.com/en/actions/security-guides/automatic-token-authentication
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push container image to registry
        uses: docker/build-push-action@v3
        with:
          context: ./src
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          cache-to: type=inline
          tags: |
            ${{ steps.meta.outputs.tags }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

  gh-debug:
    if: github.event_name == 'workflow_dispatch'
    uses: ./.github/workflows/gh-debug.yaml
